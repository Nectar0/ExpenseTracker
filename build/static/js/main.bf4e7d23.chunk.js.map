{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","yearData","target","showYearHandler","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","console","log","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","formIsShown","setFormIsShown","changeFormState","open","onClick","onSubmit","preventDefault","expenseData","Date","onAddExpense","type","min","step","NewExpense","enteredExpenseData","random","DUMMY_EXPENSES","App","setExpenses","prevExpenses","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.bf4e7d23.chunk.js","sourcesContent":["import \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./ExpensesFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const pickYearHandler = (event) => {\n    const yearData = event.target.value;\n    props.showYearHandler(yearData);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={pickYearHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n      ;\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport \"./ChartBar.css\";\n//Expense Statistics Bar\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    //calculate bar height for css\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  //use \"...\" spread operator to switch dataPoints array into standalone argument, returns 12 arguments (12 months)\n  const totalMaximum = Math.max(...dataPointValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //starting at 0 -> january = 0\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return <Chart dataPoints={chartDataPoints} />;\n};\n\nexport default ExpensesChart;\n","import \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport React from \"react\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const addFilterByYear = (yearData) => {\n    setFilteredYear(yearData);\n    console.log(yearData);\n  };\n\n  const filteredExpenses = props.items.filter((expense) => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <li>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={filteredYear}\n          showYearHandler={addFilterByYear}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </li>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  //   const [userInput, setUserInput] = useState({\n  //     enteredTitle: \"\",\n  //     enteredAmount: \"\",\n  //     enteredDate: \"\",\n  //   });\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: event.target.value,\n    // });\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredAmount: event.target.value };\n    // });\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      //force string to number conversion using \"+\" operator\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onAddExpense(expenseData);\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    //(new) also close form after new expense is submitted\n    changeFormState();\n  };\n\n  const [formIsShown, setFormIsShown] = useState(false);\n\n  const changeFormState = () => {\n    if (formIsShown === false) {\n      setFormIsShown(true);\n    } else {\n      setFormIsShown(false);\n    }\n  };\n\n  const open = <button onClick={changeFormState}>New Expense</button>;\n\n  const cancelForm = () => {\n    setFormIsShown(false);\n  };\n\n  if (formIsShown === true) {\n    return (\n      <div>\n        <form onSubmit={submitHandler}>\n          <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n              <label>Title</label>\n              <input\n                value={enteredTitle}\n                type=\"text\"\n                onChange={titleChangeHandler}\n              />\n            </div>\n            <div className=\"new-expense__control\">\n              <label>Amount</label>\n              <input\n                value={enteredAmount}\n                type=\"number\"\n                min=\"0.01\"\n                step=\"0.01\"\n                onChange={amountChangeHandler}\n              />\n            </div>\n            <div className=\"new-expense__control\">\n              <label>Date</label>\n              <input\n                value={enteredDate}\n                type=\"date\"\n                min=\"2019-01-01\"\n                max=\"2022-12-31\"\n                onChange={dateChangeHandler}\n              />\n            </div>\n          </div>\n          <div className=\"new-expense__actions\">\n            <button type=\"submit\">Add Expense</button>\n            <button onClick={cancelForm}>Cancel</button>\n          </div>\n        </form>\n      </div>\n    );\n    //if user has not opened the form\n    //return the button used to open it\n  } else return open;\n};\n\nexport default ExpenseForm;\n","import React from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onAddExpense={saveExpenseDataHandler}></ExpenseForm>\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport React, { useState } from \"react\";\n\nconst DUMMY_EXPENSES = [\n  //placeholder data\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport firebase from \"firebase/compat/app\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBwmsNdPj-Kdszor0aRunAduqy_ND-UDl4\",\n  authDomain: \"expensetracker-8bb26.firebaseapp.com\",\n  projectId: \"expensetracker-8bb26\",\n  storageBucket: \"expensetracker-8bb26.appspot.com\",\n  messagingSenderId: \"319086887686\",\n  appId: \"1:319086887686:web:6a9163de037a1427e71487\",\n  measurementId: \"G-FBBT9QVMPT\",\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}